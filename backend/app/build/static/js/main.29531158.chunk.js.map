{"version":3,"sources":["reducers/session.js","reducers/summonerInfo.js","reducers/summoners.js","reducers/someGamesData.js","reducers/index.js","store/index.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/LoginRegister/Login.js","components/LoginRegister/Register.js","components/LoginRegister/LoginRegisterBox.js","components/Session/WithAuthentication.js","components/LoginRegister/LoginRegister.js","components/Session/withAuthorization.js","components/Header/Header.js","components/Footer/Footer.js","components/SearchUserInput/loupe.svg","components/SearchUserInput/SearchUserInputContent.js","components/SearchUserInput/index.js","components/SummonerInfo/championsStatistic.js","components/SummonerInfo/gameHistory.js","components/SummonerInfo/summonerRanks.js","components/SummonerInfo/SummonerInfoContent.js","components/SummonerInfo/index.js","components/ChooseSummoner/ChooseSummonerAuth.js","components/ChooseSummoner/ChooseSummonerHistory.js","components/ChooseSummoner/ChooseSummoner.js","components/App/walentynka.png","components/App/Walentynka.js","components/App/index.js","index.js"],"names":["INITIAL_STATE","authUser","applySetAuthUser","state","action","sessionReducer","type","basicInfoSummoner","flexRank","soloRank","championsPlayedFlex","championsPlayedSolo","championsPlayedAram","last100games","applyBasicInfoSummoner","jsonSummonerByName","applyFlexRank","applySoloRank","applyChampionsPlayedFlex","applyChampionsPlayedSolo","applyChampionsPlayedAram","applylast100games","summonerInfoReducer","summoners","favoriteSummoners","applyAddSummoner","currentArray","currentFavoriteArray","includes","newSummoner","applyDeleteSummoner","index","indexOf","splice","Array","isArray","length","applyFavoriteSummoners","summonersRerucer","queuesIDsDictionary","championsIDs","acutalPatch","spellsDictionary","21","1","14","3","4","6","7","13","30","31","39","32","12","11","applyQueuesIDsDictionary","applyChampionsIDs","applySpellsDictionary","applyacutalPatch","someDataGameReducer","rootReducer","combineReducers","sessionState","summonerInfoState","someDataGame","store","createStore","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithFacebook","signInWithPopup","facebookProvider","doSignOut","signOut","currentUser","uid","usersSummonersRef","db","ref","app","initializeApp","this","database","FacebookAuthProvider","error","SignInFormBase","onSubmit","event","catch","setState","preventDefault","onChange","target","name","value","isInvalid","className","id","TextField","label","variant","placeholder","Button","disabled","color","message","SignInFacebookBase","then","socialAuthUser","user","set","username","additionalUserInfo","profile","roles","code","SignInFacebook","compose","withRouter","SignInForm","SignInPage","passwordOne","passwordTwo","SignUpFormBase","update","0","SignUpForm","SignUpPage","LoginRegisterBox","isLoginOpen","isRegisterOpen","onClick","showLoginBox","bind","showRegisterBox","withAuthentication","WithAuthentication","listener","onAuthStateChanged","onSetAuthUser","console","log","localStorage","removeItem","connect","dispatch","withAuthorization","condition","WithAuthorization","history","location","pathname","push","CircularProgress","to","Fragment","style","textDecoration","Footer","SearchUserInputContent","nickname","toLowerCase","src","loupe","alt","SearchUserInput","ChampionsStatistic","changeClass","copyState","setClass","forEach","val","i","changeClassShowMore","newClassName","showMoreId","isLodaing","stats","statsComponents","displayNumber","dictionaryChampsID","StatsComponent","align","prevState","Stats","slice","map","championsPlayed","elemtns","GameHistory","applyNewClass","indexQueue","quueueTypeActiveIndex","isLoading","displayedGames","fetchStep","status","errorMessage","fetchedGames","baisicsGameInfo","loadAgain","loadMore","isDisabled","filterHistory","gameTypes","_isMounted","game","queue","sort","unshift","fetchInfoAboutGame","lastGames","filter","matchIDs","gameId","response","timeInMs","Date","now","Promise","all","matchID","a","getStorageGame","JSON","parse","getItem","fetch","json","jsonresponse","returngameInfo","setItem","stringify","e","clear","rest","champions","queueId","allGameInfo","games","classBackround","participantId","participants","participant","participantsIndex","championId","champion","teamId","kills","deaths","assists","kda","Math","round","Infinity","isNaN","timeAgo","killsInRow","ifWin","gameDurationMinutes","gameDuration","gameDurationSeconds","gameCreation","timeMinutes","minutesAgoString","pentaKills","quadraKills","tripleKills","doubleKills","win","teams","title","spell1Id","spell2Id","champLevel","totalMinionsKilled","neutralMinionsKilled","item0","item1","item2","item6","item3","item4","item5","participantIdentities","i_OtherPlayers","player","summonerName","Loading","tier","rank","leaguePoints","wins","losses","SummonerName","match","params","isFetchError","lastUpdate","responseActualPatch","statusText","jsonActualPatch","setActualPatch","setBasicInfoSummoner","setSoloRank","setFlexRank","setChampionsPlayedFlex","setChampionsPlayedSolo","setChampionsPlayedAram","setLast100games","setChampionsIDs","addNewSummoner","getStorage","queuesIDsDictionaryFromStorage","fetchQueuesIDs","setQueuesIDsDictionary","rank1","rank2","queueType","fetchSummDataOnMount","responsegamesID_url","description","RiotApiKeySecond","region","cors","responseSummonerByName","SummonerID","responseSummonerRank","undefined","jsonSummonerRank","responseChampions","jsonChampions","Object","entries","data","key","accountId","responsegames","json_lats_100_games","matches","fetchListGame","StorageData","RiotApiKey","gameID","beginIndex","endIndex","totalGames","jsongames","championsArray","x","sorted","b","profileIconId","summonerLevel","LastUpdate","timeAgoString","dateNow","setQueueIDs","queueIds","SummonerInfo","SummonerInfoContent","ChooseSummonerAuth","deleteSummoner","child","remove","alert","arrayOfSummoners","loading","on","snapshot","summonerObject","keys","setFavoriteSummoners","activeClassName","ChooseSummonerHistory","addSummoner","Walentynka","walentynka","ScrollToTopRoute","prevProps","window","scrollTo","ScrollToTop","exact","strict","path","component","LoginRegister","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.29531158.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n    authUser: null,\r\n  };\r\n   \r\n  const applySetAuthUser = (state, action) => ({\r\n    ...state,\r\n    authUser: action.authUser,\r\n  });\r\n   \r\n  function sessionReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n      case 'AUTH_USER_SET': {\r\n        return applySetAuthUser(state, action);\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n   \r\n  export default sessionReducer;","const INITIAL_STATE = {\r\n  basicInfoSummoner: null,\r\n  flexRank: null,\r\n  soloRank: null,\r\n  championsPlayedFlex: [],\r\n  championsPlayedSolo: [],\r\n  championsPlayedAram: [],\r\n  last100games: [],\r\n};\r\n\r\nconst applyBasicInfoSummoner = (state, action) => ({\r\n  ...state,\r\n  basicInfoSummoner: action.jsonSummonerByName,\r\n});\r\n\r\nconst applyFlexRank = (state, action) => ({\r\n  ...state,\r\n  flexRank: action.flexRank,\r\n});\r\n\r\nconst applySoloRank = (state, action) => ({\r\n  ...state,\r\n  soloRank: action.soloRank,\r\n});\r\n\r\nconst applyChampionsPlayedFlex = (state, action) => ({\r\n  ...state,\r\n  championsPlayedFlex: action.championsPlayedFlex,\r\n});\r\n\r\nconst applyChampionsPlayedSolo = (state, action) => ({\r\n  ...state,\r\n  championsPlayedSolo: action.championsPlayedSolo,\r\n});\r\n\r\nconst applyChampionsPlayedAram = (state, action) => ({\r\n  ...state,\r\n  championsPlayedAram: action.championsPlayedAram,\r\n});\r\n\r\nconst applylast100games = (state, action) => ({\r\n  ...state,\r\n  last100games: action.last100games,\r\n});\r\n\r\nfunction summonerInfoReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'BASIC_INFO_SUMMOONER_SET': {\r\n      return applyBasicInfoSummoner(state, action);\r\n    }\r\n    case 'FLEX_RANK_SET': {\r\n      return applyFlexRank(state, action);\r\n    }\r\n    case 'SOLO_RANK_SET': {\r\n      return applySoloRank(state, action);\r\n    }\r\n    case 'PLAYED_FLEX_SET': {\r\n      return applyChampionsPlayedFlex(state, action);\r\n    }\r\n    case 'PLAYED_SOLO_SET': {\r\n      return applyChampionsPlayedSolo(state, action);\r\n    }\r\n    case 'PLAYED_ARAM_SET': {\r\n      return applyChampionsPlayedAram(state, action);\r\n    }\r\n    case 'LAST_100_GAMES_SET': {\r\n      return applylast100games(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default summonerInfoReducer;","const INITIAL_STATE = {\r\n    summoners: [],\r\n    favoriteSummoners: [],\r\n};\r\n\r\n\r\nfunction applyAddSummoner(state, action) {\r\n\r\n    let currentArray = state.summoners\r\n    let currentFavoriteArray = state.favoriteSummoners\r\n\r\n    if (!currentArray.includes(action.newSummoner) && !currentFavoriteArray.includes(action.newSummoner)) {\r\n        return ({\r\n            ...state,\r\n            summoners: [...state.summoners, action.newSummoner]\r\n        })\r\n    }\r\n    else\r\n        return ({\r\n            ...state,\r\n            summoners: [...state.summoners]\r\n        })\r\n\r\n\r\n}\r\n\r\nfunction applyDeleteSummoner(state, action) {\r\n\r\n    let currentArray = state.summoners\r\n    let index = currentArray.indexOf(action.newSummoner);\r\n    if (index !== -1) {\r\n        currentArray.splice(index, 1);\r\n    }\r\n    if (Array.isArray(currentArray) && currentArray.length === 0){\r\n        return ({\r\n            ...state,\r\n            summoners: []\r\n        })\r\n    }\r\n\r\n    return ({\r\n        ...state,\r\n        summoners: [currentArray]\r\n    })\r\n}\r\n\r\nconst applyFavoriteSummoners = (state, action) => ({\r\n    ...state,\r\n    favoriteSummoners: action.favoriteSummoners,\r\n  });\r\n\r\nfunction summonersRerucer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'ADD_SUMMONER_SET': {\r\n            return applyAddSummoner(state, action);\r\n        }\r\n        case 'DELETE_SUMMONER_SET': {\r\n            return applyDeleteSummoner(state, action);\r\n        }\r\n        case 'UPDATE_FAVORITE_SUMMONETS': {\r\n            return applyFavoriteSummoners(state, action);\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default summonersRerucer;","const INITIAL_STATE = {\r\n  queuesIDsDictionary: null,\r\n  championsIDs: null,\r\n  acutalPatch: null,\r\n  spellsDictionary: {\r\n    21: \"SummonerBarrier\",\r\n    1: \"SummonerBoost\",\r\n    14: \"SummonerDot\",\r\n    3: \"SummonerExhaust\",\r\n    4: \"SummonerFlash\",\r\n    6: \"SummonerHaste\",\r\n    7: \"SummonerHeal\",\r\n    13: \"SummonerMana\",\r\n    30: \"SummonerPoroRecall\",\r\n    31: \"SummonerPoroThrow\",\r\n    39: \"SummonerSnowURFSnowball_Mark\",\r\n    32: \"SummonerSnowball\",\r\n    12: \"SummonerTeleport\",\r\n    11: \"SummonerSmite\",\r\n\r\n  }\r\n};\r\n\r\nconst applyQueuesIDsDictionary = (state, action) => ({\r\n  ...state,\r\n  queuesIDsDictionary: action.queuesIDsDictionary,\r\n});\r\nconst applyChampionsIDs = (state, action) => ({\r\n  ...state,\r\n  championsIDs: action.championsIDs,\r\n});\r\nconst applySpellsDictionary = (state, action) => ({\r\n  ...state,\r\n  spellsDictionary: action.spellsDictionary,\r\n});\r\n\r\nconst applyacutalPatch = (state, action) => ({\r\n  ...state,\r\n  acutalPatch: action.acutalPatch,\r\n});\r\n\r\nfunction someDataGameReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'GAMES_IDs_SET': {\r\n      return applyQueuesIDsDictionary(state, action);\r\n    }\r\n    case 'CHAMPIONS_IDs_SET': {\r\n      return applyChampionsIDs(state, action);\r\n    }\r\n    case 'SPELLS_DICT_SET': {\r\n      return applySpellsDictionary(state, action);\r\n    }\r\n    case 'ACTUAL_PATCH_SET': {\r\n      return applyacutalPatch(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default someDataGameReducer;","import { combineReducers } from 'redux';\r\nimport sessionReducer from './session';\r\nimport summonerInfoReducer from './summonerInfo';\r\nimport summonersRerucer from './summoners';\r\nimport someDataGameReducer from './someGamesData';\r\n \r\nconst rootReducer = combineReducers({\r\n  sessionState: sessionReducer,\r\n  summonerInfoState: summonerInfoReducer,\r\n  summoners: summonersRerucer,\r\n  someDataGame: someDataGameReducer,\r\n});\r\n \r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers';\r\n \r\nconst store = createStore(rootReducer);\r\n \r\nexport default store","import React from 'react';\r\n \r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\n  \r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\r\n\r\n  }\r\n\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithFacebook = () =>\r\n    this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  currentUser = () => this.auth.currentUser.uid\r\n\r\n  usersSummonersRef = uid => this.db.ref(`usersSummoners/${uid}`);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n \r\nexport default Firebase;\r\n \r\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport { compose } from 'recompose';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <span id=\"widht_h1\">\r\n      <h1>Logowanie</h1>\r\n    </span>\r\n    <SignInForm />\r\n    <SignInFacebook />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n    const isInvalid = password === '' || email === '';\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <div id=\"emailWidth\">\r\n          <TextField className=\"outlined-basic\" label=\"Adres e-mail\" variant=\"outlined\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.onChange}\r\n            type=\"text\"\r\n            placeholder=\"Adres e-mail\"\r\n          />\r\n        </div>\r\n        <div id=\"passwordWidth\">\r\n          <TextField className=\"outlined-basic\" label=\"Hasło\" variant=\"outlined\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            placeholder=\"Hasło\"\r\n          />\r\n        </div>\r\n        <div className=\"blueBacground\">\r\n          <Button disabled={isInvalid} type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n            Zaloguj się!\r\n           </Button>\r\n        </div>\r\n        {error && <div className=\"errorLoginRegister\">{error.message}</div>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS =\r\n  'auth/account-exists-with-different-credential';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with an E-Mail address to\r\n  this social account already exists. Try to login from\r\n  this account instead and associate your social accounts on\r\n  your personal account page.\r\n`;\r\nclass SignInFacebookBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithFacebook()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.additionalUserInfo.profile.name,\r\n          email: socialAuthUser.additionalUserInfo.profile.email,\r\n          roles: [],\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        // this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <button type=\"submit\">Sign In with Facebook</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst SignInFacebook = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFacebookBase);\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm, SignInFacebook };\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport { compose } from 'recompose';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <span id=\"widht_h1\">\r\n      <h1>Rejestracja</h1>\r\n    </span>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(()=>{\r\n        this.props.firebase.usersSummonersRef(this.props.firebase.currentUser()).update({\r\n          0: 0\r\n      })\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo ||\r\n      passwordOne === '' || email === '';\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <div id=\"emailWidth\">\r\n          <TextField className=\"outlined-basic\" label=\"Adres e-mail\" variant=\"outlined\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.onChange}\r\n            type=\"text\"\r\n            placeholder=\"Adres e-mail\"\r\n          />\r\n        </div>\r\n        <div id=\"passwordWidth\">\r\n          <TextField className=\"outlined-basic\" label=\"Hasło\" variant=\"outlined\"\r\n            name=\"passwordOne\"\r\n            value={passwordOne}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            placeholder=\"Hasło\"\r\n          />\r\n        </div>\r\n        <div id=\"confrimWidth\">\r\n          <TextField className=\"outlined-basic\" label=\"Potwierdź hasło\" variant=\"outlined\"\r\n            name=\"passwordTwo\"\r\n            value={passwordTwo}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            placeholder=\"Potwierdź hasło\"\r\n          />\r\n        </div>\r\n        <div className=\"blueBacground\">\r\n          <Button disabled={isInvalid} type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n            Zarejestruj się!\r\n           </Button>\r\n        </div>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm };","import React from \"react\"\r\nimport SignInForm from \"./Login\"\r\nimport SignUpPage from \"./Register\"\r\nclass LoginRegisterBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isLoginOpen: true,\r\n          isRegisterOpen: false\r\n        };\r\n    }\r\n\r\n     showLoginBox() {\r\n        this.setState({isLoginOpen: true, isRegisterOpen: false});\r\n        }\r\n        \r\n     showRegisterBox() {\r\n        this.setState({isRegisterOpen: true, isLoginOpen: false});\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div className=\"root-container\">\r\n                  <div className=\"box-controller\">\r\n                      <div\r\n                          className={\"controller \" + (this.state.isLoginOpen\r\n                          ? \"selected-controller\"\r\n                          : \"\")}\r\n                          onClick={this\r\n                          .showLoginBox\r\n                          .bind(this)}>\r\n                          Zaloguj się\r\n                      </div>\r\n                      <div\r\n                          className={\"controller \" + (this.state.isRegisterOpen\r\n                          ? \"selected-controller\"\r\n                          : \"\")}\r\n                          onClick={this\r\n                          .showRegisterBox\r\n                          .bind(this)}>\r\n                          Zarejestruj się\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"box-container\">\r\n                  {this.state.isLoginOpen && <SignInForm />}\r\n                  {this.state.isRegisterOpen && <SignUpPage />}\r\n                  </div>\r\n              </div>\r\n            );\r\n        }\r\n      \r\n}\r\n\r\nexport default LoginRegisterBox  ","import React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     // this.props.onSetAuthUser(\r\n    //     //   JSON.parse(localStorage.getItem('authUser')),\r\n    //     // ); idk what is that for\r\n    //   }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          // localStorage.setItem('authUser', JSON.stringify(authUser));\r\n          this.props.onSetAuthUser(authUser);\r\n        },\r\n        () => {\r\n          console.log(\"222222222222222222222222222222222222222\");\r\n          localStorage.removeItem('authUser');\r\n          this.props.onSetAuthUser(null);\r\n          console.log(\"222222222222222222222222222222222222222\");\r\n\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => ({\r\n    onSetAuthUser: authUser =>\r\n      dispatch({ type: 'AUTH_USER_SET', authUser }),\r\n  });\r\n\r\n  return compose(\r\n    withFirebase,\r\n    connect(\r\n      null,\r\n      mapDispatchToProps,\r\n    ),\r\n  )(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;","import React from 'react';\r\nimport LoginRegisterBox from './LoginRegisterBox.js'\r\nimport { withAuthorization } from '../Session';\r\n\r\n\r\nfunction LoginRegister() {\r\n    return (\r\n        <div>\r\n            <LoginRegisterBox />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst condition = authUser => !authUser;\r\n \r\nexport default withAuthorization(condition)(LoginRegister);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { withFirebase } from '../Firebase';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { connect } from 'react-redux';\r\n\r\nconst withAuthorization = condition => Component => {\r\n    class WithAuthorization extends React.Component {\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n                authUser => {\r\n                    if (!condition(authUser)) {\r\n                        console.log(\"unloged\");\r\n                        // this.props.history.push('/login');\r\n\r\n                        if (this.props.history.location.pathname === \"/login\") {\r\n                             this.props.history.push('/');\r\n                        }\r\n                        else {\r\n                            this.props.history.push('/login');\r\n                        }\r\n                    }\r\n                },\r\n            );\r\n        }\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n        render() {\r\n                return condition(this.props.authUser) ? (\r\n                    <Component {...this.props} />\r\n                  ) : <div id=\"beforeRender\"><CircularProgress /></div>;\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = state => ({\r\n        authUser: state.sessionState.authUser,\r\n      });\r\n\r\n    return compose(\r\n        withRouter,\r\n        withFirebase,\r\n        connect(mapStateToProps),\r\n    )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React from 'react';\r\nimport '../../css/Header.css'\r\nimport '../../css/App.css'\r\n// import SignOutButton from '../SignOut/SignOut'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'recompose';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst Header = ({ authUser, firebase, ...props }) => {\r\n    // console.log(props.location.pathname === '/eune/');\r\n    // console.log(props);\r\n    // var str = \"Hello world, welcome to the universe.\";\r\n    // var n = str.startsWith(\"Hello\");\r\n    return (\r\n        <div className='header ClassHeaderFooter'>\r\n            <div id=\"leftNavbar\">\r\n                <NavLink className={props.location.pathname !== '/login' ? \"navigateSelected navigate\" : \"navigate\"} to=\"/\">\r\n                    <span>\r\n                        Summoners\r\n                    </span>\r\n                </NavLink>\r\n                <NavLink className={props.location.pathname === '/login' ? \"navigateSelected navigate\" : \"navigate\"} to=\"/WalentynkaDlaDominiki\">\r\n                    <span>\r\n                        Walentynka Dla dominiki \r\n                    </span>\r\n                </NavLink>\r\n                {/* <NavLink className={props.location.pathname === '/eune/arehcats' ? \"navigateSelected navigate\" : \"navigate\"} to=\"/login\">\r\n                    <span>\r\n                        To do 2\r\n                    </span>\r\n                </NavLink> */}\r\n            </div>\r\n            <div id=\"rightNavbar\">\r\n                {authUser ?\r\n                    <React.Fragment>\r\n                        <div>\r\n                            {authUser.email}\r\n                        </div>\r\n                        <div className=\"logInOut\" onClick={firebase.doSignOut}>\r\n                            <strong>Wyloguj</strong>\r\n                        </div>\r\n                    </React.Fragment>\r\n                    :\r\n                    <div >\r\n                        <NavLink className=\"logInOut\" to=\"/login\" style={{ textDecoration: 'none' }}>\r\n                            <strong>\r\n                                Login\r\n                            </strong>\r\n                        </NavLink>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n// const NavigationAuth = (authUser) => {\r\n//     return (\r\n//         <div  >\r\n//             <div>\r\n//                 {authUser.authUser.email}\r\n//             </div>\r\n//             <div>\r\n//                 <SignOutButton />\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n// const NavigationNonAuth = () => {\r\n\r\n//     return (\r\n//         <div>\r\n//             <NavLink to=\"/login\" style={{ textDecoration: 'none' }}>\r\n//                 Login\r\n//             </NavLink>\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n    authUser: state.sessionState.authUser,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    withFirebase,\r\n    connect(mapStateToProps),\r\n)(Header);","import React from 'react';\r\nimport '../../css/Footer.css'\r\nimport '../../css/App.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div id='footer' className=\"ClassHeaderFooter\">\r\n            {/* Footer */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/loupe.98f0bb40.svg\";","import React from 'react';\r\nimport '../../css/SearchUserInput.css'\r\nimport loupe from './loupe.svg'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nclass SearchUserInputContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nickname: \"\",\r\n            error: null\r\n        };\r\n\r\n    };\r\n\r\n    onSubmit = event => {\r\n        const { nickname } = this.state;\r\n        const { history } = this.props;\r\n        history.push(\"/eune/\" + nickname.toLowerCase())\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ nickname: event.target.value });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { nickname, error } = this.state;\r\n\r\n        const isInvalid = nickname === '' || nickname.length < 3\r\n\r\n        return (\r\n            <div id=\"SearchUserInputContent\">\r\n                <div>\r\n                    <img id='loupe' src={loupe} alt=\"loupe\" />\r\n                    <div id=\"inputTitle\">\r\n                        <span>Paste League of Legends nickname you want to stalk!</span>\r\n                    </div>\r\n                </div>\r\n                <div id=\"SearchInput\">\r\n                    <form className=\"SearchInputform\" onSubmit={this.onSubmit}>\r\n                        <div id=\"SearchInputNickname\">\r\n                            <TextField className=\"outlined-basic\" label=\"Nickname\" variant=\"outlined\"\r\n                                name=\"nickname\"\r\n                                value={nickname}\r\n                                onChange={this.onChange}\r\n                                type=\"text\"\r\n                                placeholder=\"Nickname\"\r\n                            />\r\n                        </div>\r\n                        <div id=\"submitSearch\">\r\n                            <Button id=\"findButton\" disabled={isInvalid} type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                                Stalk!\r\n                            </Button>\r\n                        </div>\r\n                        {error && <div className=\"errorLoginRegister\">{error.message}</div>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchUserInputContent);\r\n\r\n","import React from 'react';\r\nimport SearchUserInputContent from './SearchUserInputContent'\r\n\r\nfunction SearchUserInput() {\r\n    return (\r\n        <div>\r\n            <SearchUserInputContent/>\r\n        </div>\r\n    );\r\n}\r\n\r\n \r\nexport default SearchUserInput;\r\n","import React from 'react';\r\nimport '../../css/SummonerInfo.css'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\n\r\n\r\nclass ChampionsStatistic extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLodaing: true,\r\n            stats: 0,\r\n            setClass: [\"statsSelected\", \"stats\", \"stats\"],\r\n            statsComponents: [],\r\n            displayNumber: 7,\r\n            showMoreId: \"showMore\",\r\n        };\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        let dictionaryChampsID = this.props.championsIDs\r\n        let statsComponents = []\r\n        statsComponents[0] = StatsComponent(this.props.championsPlayedSolo, dictionaryChampsID)\r\n        statsComponents[1] = StatsComponent(this.props.championsPlayedFlex, dictionaryChampsID)\r\n        statsComponents[2] = StatsComponent(this.props.championsPlayedAram, dictionaryChampsID)\r\n\r\n        this.setState({\r\n            isLodaing: false,\r\n            statsComponents: statsComponents,\r\n        })\r\n\r\n    }\r\n\r\n    changeClass = (id) => {\r\n        let copyState = [...this.state.setClass];\r\n        copyState.forEach((val, i) => {\r\n            copyState[i] = 'stats'\r\n        })\r\n        copyState[id] = 'statsSelected'\r\n        this.setState({\r\n            setClass: copyState\r\n        });\r\n    }\r\n\r\n    changeClassShowMore = (newClassName) => {\r\n        this.setState({\r\n            showMoreId: newClassName,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isLodaing ? <div align=\"center\"><CircularProgress /></div>\r\n                    :\r\n                    <div>\r\n                        <div id=\"statsSelectGameType\">\r\n                            <div className={this.state.setClass[0]}>\r\n                                <Button type=\"submit\" variant=\"outlined\" color=\"primary\"\r\n                                    onClick={() => {\r\n                                        this.changeClass(0)\r\n                                        this.setState({\r\n                                            stats: 0,\r\n                                            displayNumber: 7,\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    SoloQ\r\n                                </Button>\r\n                            </div>\r\n                            <div className={this.state.setClass[1]}>\r\n                                <Button type=\"submit\" variant=\"outlined\" color=\"primary\"\r\n                                    onClick={() => {\r\n                                        this.changeClass(1)\r\n                                        this.setState({\r\n                                            stats: 1,\r\n                                            displayNumber: 7,\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    Flex\r\n                                </Button>\r\n                            </div>\r\n                            <div className={this.state.setClass[2]}>\r\n                                <Button type=\"submit\" variant=\"outlined\" color=\"primary\"\r\n                                    onClick={() => {\r\n                                        this.changeClass(2)\r\n                                        this.setState({\r\n                                            stats: 2,\r\n                                            displayNumber: 7,\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    Aram\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <Stats stats={this.state.stats}\r\n                                statsComponents={this.state.statsComponents}\r\n                                displayNumber={this.state.displayNumber}\r\n                            />\r\n                        </div>\r\n                        <div id=\"stats\" onClick={() => {\r\n                            this.setState((prevState) => ({\r\n                                displayNumber: prevState.displayNumber + 8\r\n                            }));\r\n                        }}>\r\n                            {(this.state.displayNumber >= this.state.statsComponents[this.state.stats].length)\r\n                                ?\r\n                                \"\"\r\n                                :\r\n                                < Button id=\"showMore\"\r\n                                    type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                                    Show more\r\n                                </Button>}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Stats = ({ stats, statsComponents, displayNumber }) => {\r\n    if (stats === 0) {\r\n        if (statsComponents[0].length === 0) return <div className=\"gamesNotFound\" >You haven't play this game mode in this season</div>\r\n        return <div className=\"statsListing\" >\r\n            {statsComponents[0].slice(0, displayNumber).map((val, i) => {\r\n                return val\r\n            })}\r\n        </div>\r\n    }\r\n    else if (stats === 1) {\r\n        if (statsComponents[1].length === 0) return <div className=\"gamesNotFound\">You haven't play this game mode in this season</div>\r\n        return <div className=\"statsListing\" >\r\n            {statsComponents[1].slice(0, displayNumber).map((val, i) => {\r\n                return val\r\n            })}\r\n        </div>\r\n    }\r\n    else {\r\n        if (statsComponents[2].length === 0) return <div className=\"gamesNotFound\">You haven't play this game mode in this season</div>\r\n        return <div className=\"statsListing\" >\r\n            {statsComponents[2].slice(0, displayNumber).map((val, i) => {\r\n                return val\r\n            })}\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nconst StatsComponent = (championsPlayed, dictionaryChampsID) => {\r\n    let elemtns = []\r\n    championsPlayed.forEach((val, i) => {\r\n        elemtns.push(<div key={i}>\r\n            <img src={'http://ddragon.leagueoflegends.com/cdn/11.2.1/img/champion/' + dictionaryChampsID[val[0]] + '.png'}\r\n                alt={\"Summoner icon\"} />\r\n            <div className=\"statsListingInside\" >\r\n                <div>\r\n                    <span className=\"boldStats\">{dictionaryChampsID[val[0]]}</span>\r\n                </div>\r\n                <div>\r\n                    <span className=\"fontSizeStats\">Played games: </span><span className=\"boldStats\">{val[1]}</span>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    })\r\n\r\n    return elemtns\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    basicInfoSummoner: state.summonerInfoState.basicInfoSummoner,\r\n    championsPlayedFlex: state.summonerInfoState.championsPlayedFlex,\r\n    championsPlayedSolo: state.summonerInfoState.championsPlayedSolo,\r\n    championsPlayedAram: state.summonerInfoState.championsPlayedAram,\r\n    championsIDs: state.someDataGame.championsIDs,\r\n});\r\n\r\nexport default compose(\r\n    // withFirebase,\r\n    connect(mapStateToProps),\r\n)(ChampionsStatistic);\r\n","import React from 'react';\r\nimport '../../css/gameHistory.css'\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass GameHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            displayedGames: 0,\r\n            fetchStep: 10,\r\n            status: false,\r\n            errorMessage: \"\",\r\n            fetchedGames: [],\r\n            baisicsGameInfo: [],\r\n            loadAgain: [],\r\n            loadMore: true,\r\n            isDisabled: false,\r\n            filterHistory: \"All games\",\r\n            gameTypes: [],\r\n            quueueTypeActiveIndex: 0,\r\n        };\r\n        this._isMounted = false;\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        let gameTypes = []\r\n        this.props.last100games.forEach((game) => {\r\n            if (gameTypes.includes(game.queue)) { }\r\n            else gameTypes.push(game.queue)\r\n        })\r\n\r\n        gameTypes.sort()\r\n        gameTypes.unshift(\"All games\")\r\n        this.setState({\r\n            gameTypes: gameTypes,\r\n        })\r\n        this.fetchInfoAboutGame()\r\n\r\n        //     console.log(localStorage.length);\r\n        //     for (var i = 0; i < localStorage.length; i++){\r\n        //        console.log(localStorage.getItem(localStorage.key(i)));\r\n        //        console.log(\"///////////////////////////////////////////////////\");\r\n        //     }\r\n\r\n        //     var data = '';\r\n\r\n        // console.log('Current local storage: ');\r\n\r\n        // for(var key in window.localStorage){\r\n\r\n        //     if(window.localStorage.hasOwnProperty(key)){\r\n        //         data += window.localStorage[key];\r\n        //         // console.log( key + \" = \" + ((window.localStorage[key].length * 16)/(8 * 1024)).toFixed(2) + ' KB' );\r\n        //     }\r\n\r\n        // }\r\n\r\n        // console.log(data ? '\\n' + 'Total space used: ' + ((data.length * 16)/(8 * 1024)).toFixed(2) + ' KB' : 'Empty (0 KB)');\r\n        // console.log(data ? 'Approx. space remaining: ' + (5120 - ((data.length * 16)/(8 * 1024)).toFixed(2)) + ' KB' : '5 MB');\r\n\r\n    }\r\n\r\n    async fetchInfoAboutGame() {\r\n        const filterHistory = this.state.filterHistory\r\n        const lastGames = this.props.last100games.filter(game => game.queue === filterHistory || filterHistory === \"All games\")\r\n        let displayedGames = this.state.displayedGames\r\n        const fetchStep = this.state.fetchStep\r\n        let fetchedGames = this.state.fetchedGames\r\n        const condition = displayedGames + fetchStep\r\n        let matchIDs = []\r\n        let baisicsGameInfo = this.state.baisicsGameInfo\r\n\r\n        for (; displayedGames < condition; displayedGames++) {\r\n            if (lastGames.length > displayedGames) {\r\n                matchIDs.push(lastGames[displayedGames].gameId)\r\n                baisicsGameInfo.push(lastGames[displayedGames])\r\n            }\r\n            else {\r\n                this.setState({\r\n                    loadMore: false\r\n                })\r\n            }\r\n        }\r\n\r\n        // matchIDs[1] = \"4444d44\"\r\n        // baisicsGameInfo.push(lastGames[3])\r\n\r\n        // const RiotApiKey = \"?api_key=\" + process.env.REACT_APP_RITO_API_KEY\r\n        // const RiotApiKeySecond = \"&api_key=\" + process.env.REACT_APP_RITO_API_KEY\r\n        // const region = \"https://eun1.api.riotgames.com\"\r\n        const region = \"eun1\"\r\n        // const cors = \"https://cors-anywhere.herokuapp.com/\"\r\n        // const cors = \"\"\r\n        let getStorageGame\r\n        let response = ''\r\n        let timeInMs = Date.now();\r\n\r\n        let [...rest] = await Promise.all(\r\n            matchIDs.map(async (matchID) => {\r\n                getStorageGame = JSON.parse(localStorage.getItem(matchID))\r\n\r\n                if (getStorageGame) {\r\n\r\n                    return getStorageGame\r\n                }\r\n                else {\r\n                    // response = await fetch(cors + region + \"/lol/match/v4/matches/\" + matchID + RiotApiKey)\r\n                    response = await fetch(\"http://localhost:8000/api/match?region=\" + region + \"&matchID=\" + matchID)\r\n\r\n                    if (!this._isMounted) return\r\n\r\n                    if (response.status !== 200) {\r\n                        console.log(\"22222\");\r\n                        return [\"error\", \"http://localhost:8000/api/match?region=\" + region + \"&matchID=\" + matchID]\r\n                    }\r\n                    else {\r\n                        console.log(\"33333\");\r\n                        let jsonresponse = await response.json()\r\n                        let returngameInfo = [jsonresponse, timeInMs]\r\n                        try {\r\n                            localStorage.setItem(jsonresponse.gameId, JSON.stringify(returngameInfo));\r\n                        } catch (e) {\r\n                            console.log(\"clear //////////////////////////\");\r\n                            localStorage.clear()\r\n                        }\r\n                        return returngameInfo\r\n\r\n                    }\r\n                }\r\n            }))\r\n\r\n\r\n        fetchedGames.push(...rest)\r\n\r\n        this.setState({\r\n            fetchedGames: fetchedGames,\r\n            displayedGames: displayedGames,\r\n            baisicsGameInfo: baisicsGameInfo,\r\n            isLoading: false,\r\n            isDisabled: false,\r\n        })\r\n\r\n\r\n    }\r\n    applyNewClass = (indexQueue) => {\r\n        this.setState({\r\n            quueueTypeActiveIndex: indexQueue,\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        let champions = this.props.championsIDs\r\n        const acutalPatch = this.props.acutalPatch\r\n\r\n        return (\r\n            <div id=\"rightConteiner\">\r\n\r\n                <div className=\"topBoxHistory\">\r\n                    <div className=\"topBoxfilterHistory\">\r\n                        {this.state.gameTypes.map((queueId, indexQueue) => {\r\n                            const className = (this.state.quueueTypeActiveIndex === indexQueue) ? \"quueueTypeActive\" : \"quueueType\"\r\n\r\n                            let name\r\n                            if (queueId === \"All games\") name = \"All games\"\r\n                            else name = this.props.queuesIDsDictionary[queueId]\r\n\r\n                            return <div className={className} key={indexQueue} onClick={() => {\r\n                                this.setState({\r\n                                    filterHistory: queueId,\r\n                                    displayedGames: 0,\r\n                                    fetchedGames: [],\r\n                                    baisicsGameInfo: [],\r\n                                    loadMore: true\r\n\r\n                                }, () => {\r\n                                    this.applyNewClass(indexQueue)\r\n                                    this.fetchInfoAboutGame()\r\n                                })\r\n                            }}>\r\n                                <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                                    {name}\r\n                                </Button>\r\n\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    {/* <div className=\"topBoxStats\">\r\n                        stats history\r\n                    </div> */}\r\n                </div>\r\n\r\n                { this.state.isLoading ? <Loading status={this.state.status} errorMessage={this.state.errorMessage} />\r\n                    :\r\n                    <div>\r\n                        {this.state.fetchedGames.map((allGameInfo, i) => {\r\n\r\n\r\n                            // check if game fetched properly\r\n                            if (allGameInfo[0] === \"error\") {\r\n                                return <div key={i} onClick={async () => {\r\n\r\n\r\n                                    let loadAgain = this.state.loadAgain\r\n                                    loadAgain[i] = true\r\n                                    this.setState({\r\n                                        loadAgain: loadAgain,\r\n                                    })\r\n\r\n                                    let response = await fetch(allGameInfo[1])\r\n                                    if (!this._isMounted) return\r\n\r\n                                    if (response.status !== 200) {\r\n                                        loadAgain[i] = false\r\n\r\n                                        return this.setState({\r\n                                            loadAgain: loadAgain,\r\n                                        })\r\n                                    }\r\n                                    else {\r\n                                        let timeInMs = Date.now();\r\n\r\n                                        let jsonresponse = await response.json()\r\n                                        let returngameInfo = [jsonresponse, timeInMs]\r\n                                        try {\r\n                                            localStorage.setItem(jsonresponse.gameId, JSON.stringify(returngameInfo));\r\n                                        } catch (e) {\r\n                                            localStorage.clear()\r\n                                        }\r\n                                        let games = this.state.fetchedGames\r\n                                        games[i] = returngameInfo\r\n                                        loadAgain[i] = false\r\n\r\n                                        this.setState({\r\n                                            fetchedGames: games,\r\n                                            loadAgain: loadAgain,\r\n                                        })\r\n                                    }\r\n                                }}>\r\n                                    {this.state.loadAgain[i] ? <div className=\"circular\" align=\"center\"><CircularProgress /></div>\r\n                                        :\r\n                                        <div className=\"refresh\">\r\n                                            Ups.. something went wrong, click to try refresh\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n\r\n\r\n\r\n\r\n                            let classBackround = \"gameHistory lose\"\r\n\r\n                            let participantId = []\r\n\r\n                            allGameInfo[0].participants.forEach((participant, participantsIndex) => {\r\n\r\n                                if (participant.championId === this.state.baisicsGameInfo[i].champion) {\r\n\r\n                                    participantId.push(participantsIndex, participant.teamId)\r\n\r\n                                }\r\n                            })\r\n\r\n                            let kills = allGameInfo[0].participants[participantId[0]].stats.kills\r\n                            let deaths = allGameInfo[0].participants[participantId[0]].stats.deaths\r\n                            let assists = allGameInfo[0].participants[participantId[0]].stats.assists\r\n\r\n                            let kda = Math.round(100 * (kills + assists) / deaths) / 100\r\n                            if (kda === Infinity || isNaN(kda)) kda = \"Perfect\"\r\n\r\n                            let gameDurationMinutes = Math.round((allGameInfo[0].gameDuration) / 60)\r\n                            let gameDurationSeconds = (allGameInfo[0].gameDuration) % 60\r\n                            let timeInMs = Date.now();\r\n                            let gameCreation = allGameInfo[0].gameCreation\r\n                            // console.log(timeInMs - gameCreation);\r\n                            // console.log((timeInMs - gameCreation)/1000/60);\r\n                            let timeMinutes = Math.round((timeInMs - gameCreation) / 60000) - 30\r\n                            let timeAgo\r\n                            let minutesAgoString = \"minutes ago\"\r\n                            if (timeMinutes <= 60) {\r\n                                timeAgo = timeMinutes\r\n                            }\r\n                            else if (timeMinutes / 60 <= 24) {\r\n                                timeAgo = Math.round(timeMinutes / 60)\r\n                                minutesAgoString = \"hours ago\"\r\n                            }\r\n                            else {\r\n                                timeAgo = Math.round((timeMinutes / 60) / 24)\r\n                                minutesAgoString = \"days ago\"\r\n                            }\r\n\r\n\r\n                            let killsInRow\r\n\r\n                            if (allGameInfo[0].participants[participantId[0]].stats.pentaKills) {\r\n                                killsInRow = \"Penta kill\"\r\n                            }\r\n                            else if (allGameInfo[0].participants[participantId[0]].stats.quadraKills) {\r\n                                killsInRow = \"Quadra kill\"\r\n                            }\r\n                            else if (allGameInfo[0].participants[participantId[0]].stats.tripleKills) {\r\n                                killsInRow = \"Triple kill\"\r\n                            }\r\n                            else if (allGameInfo[0].participants[participantId[0]].stats.doubleKills) {\r\n                                killsInRow = \"Dobule kill\"\r\n                            }\r\n\r\n\r\n\r\n                            let ifWin\r\n                            if (allGameInfo[0].participants[participantId[0]].stats.win) ifWin = \"Victory\"\r\n                            else ifWin = \"Defeat\"\r\n\r\n                            if (allGameInfo[0].teams[0].teamId === participantId[1]) {\r\n                                if (allGameInfo[0].teams[0].win === \"Fail\") {\r\n                                }\r\n                                else {\r\n                                    classBackround = \"gameHistory win\"\r\n                                }\r\n                            }\r\n                            else if (allGameInfo[0].teams[1].teamId === participantId[1]) {\r\n                                if (allGameInfo[0].teams[1].win === \"Fail\") {\r\n                                }\r\n                                else {\r\n                                    classBackround = \"gameHistory win\"\r\n                                }\r\n                            }\r\n                            // check if remake\r\n                            if (gameDurationMinutes * 60 < 401 && (allGameInfo[0].queueId === 420 || allGameInfo[0].queueId === 440)) {\r\n                                classBackround = \"gameHistory remakeGame\"\r\n                                ifWin = \"Remake\"\r\n                            }\r\n\r\n\r\n                            return <div className={classBackround} key={i}>\r\n\r\n\r\n                                <div className=\"basicInfoGame\">\r\n                                    <div title={this.props.queuesIDsDictionary[allGameInfo[0].queueId]} className=\"gameType\">\r\n                                        {this.props.queuesIDsDictionary[allGameInfo[0].queueId]}\r\n                                    </div>\r\n                                    <div className=\"timeAgo\">\r\n                                        {timeAgo} {minutesAgoString}\r\n                                    </div>\r\n                                    <div className=\"styledLine\">\r\n\r\n                                    </div>\r\n                                    <div className={ifWin}>\r\n                                        {ifWin}\r\n                                    </div>\r\n                                    <div className=\"gameDuration\">\r\n                                        {gameDurationMinutes}m {gameDurationSeconds}s\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"championAndSpellsImg\">\r\n                                    <div>\r\n                                        <div className=\"championsImg\" >\r\n                                            <img src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/champion/'\r\n                                                + champions[allGameInfo[0].participants[participantId[0]].championId] + '.png'}\r\n                                                alt={\"Champion\"} />\r\n                                        </div>\r\n                                        <div className=\"SpellsImg\">\r\n                                            <img\r\n                                                src={\"http://ddragon.leagueoflegends.com/cdn/\" + acutalPatch + \"/img/spell/\"\r\n                                                    + this.props.spellsDictionary[allGameInfo[0].participants[participantId[0]].spell1Id] + \".png\"}\r\n                                                alt={\"Spell\"} />\r\n                                            <img\r\n                                                src={\"http://ddragon.leagueoflegends.com/cdn/\" + acutalPatch + \"/img/spell/\"\r\n                                                    + this.props.spellsDictionary[allGameInfo[0].participants[participantId[0]].spell2Id] + \".png\"}\r\n                                                alt={\"Spell\"} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"championName\">\r\n                                        {champions[allGameInfo[0].participants[participantId[0]].championId]}\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"killsAndKDA\">\r\n                                    <div className=\"killsDeats\">\r\n                                        {kills} / <span className=\"colorRed\">{deaths}</span> / {assists}\r\n                                    </div>\r\n                                    <div className=\"kda\">\r\n                                        {kda} <span className=\"colorGrey\">KDA</span>\r\n                                    </div>\r\n                                    <div className=\"killsInRow\">\r\n                                        {killsInRow}\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"level_cs_part_kills\">\r\n                                    <div className=\"champLevel\">\r\n                                        <div>\r\n                                            Level\r\n                                        </div>\r\n                                        <div>\r\n                                            {allGameInfo[0].participants[participantId[0]].stats.champLevel}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"minions\">\r\n                                        <div>\r\n                                            Minions\r\n                                        </div>\r\n                                        <div>\r\n                                            {allGameInfo[0].participants[participantId[0]].stats.totalMinionsKilled + allGameInfo[0].participants[participantId[0]].stats.neutralMinionsKilled}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"minionsMinute\">\r\n                                        <div>\r\n                                            Minions / minute\r\n                                        </div>\r\n                                        <div>\r\n                                            {Math.round(10 * (allGameInfo[0].participants[participantId[0]].stats.totalMinionsKilled + allGameInfo[0].participants[participantId[0]].stats.neutralMinionsKilled) / (allGameInfo[0].gameDuration / 60)) / 10}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"items\">\r\n                                    <div>\r\n                                        <div>\r\n                                            {allGameInfo[0].participants[participantId[0]].stats.item0 ?\r\n                                                <img src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/item/'\r\n                                                    + allGameInfo[0].participants[participantId[0]].stats.item0 + '.png'}\r\n                                                    alt={\"\"} />\r\n                                                :\r\n                                                []\r\n                                            }\r\n                                        </div>\r\n                                        <div>\r\n                                            {allGameInfo[0].participants[participantId[0]].stats.item1 ?\r\n                                                <img src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/item/'\r\n                                                    + allGameInfo[0].participants[participantId[0]].stats.item1 + '.png'}\r\n                                                    alt={\"\"} />\r\n                                                :\r\n                                                []\r\n                                            }\r\n                                        </div>\r\n                                        <div>\r\n                                            {allGameInfo[0].participants[participantId[0]].stats.item2 ?\r\n                                                <img src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/item/'\r\n                                                    + allGameInfo[0].participants[participantId[0]].stats.item2 + '.png'}\r\n                                                    alt={\"\"} />\r\n                                                :\r\n                                                []\r\n                                            }\r\n                                        </div>\r\n                                        <div>\r\n                                            {allGameInfo[0].participants[participantId[0]].stats.item6 ?\r\n                                                <img src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/item/'\r\n                                                    + allGameInfo[0].participants[participantId[0]].stats.item6 + '.png'}\r\n                                                    alt={\"\"} />\r\n                                                :\r\n                                                []\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div>\r\n                                            {allGameInfo[0].participants[participantId[0]].stats.item3 ?\r\n                                                <img src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/item/'\r\n                                                    + allGameInfo[0].participants[participantId[0]].stats.item3 + '.png'}\r\n                                                    alt={\"\"} />\r\n                                                :\r\n                                                []\r\n                                            }\r\n                                        </div>\r\n                                        <div>\r\n                                            {allGameInfo[0].participants[participantId[0]].stats.item4 ?\r\n                                                <img src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/item/'\r\n                                                    + allGameInfo[0].participants[participantId[0]].stats.item4 + '.png'}\r\n                                                    alt={\"\"} />\r\n                                                :\r\n                                                []\r\n                                            }\r\n                                        </div>\r\n                                        <div>\r\n                                            {allGameInfo[0].participants[participantId[0]].stats.item5 ?\r\n                                                <img src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/item/'\r\n                                                    + allGameInfo[0].participants[participantId[0]].stats.item5 + '.png'}\r\n                                                    alt={\"\"} />\r\n                                                :\r\n                                                []\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"displayNone\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"otherPlayers\" >\r\n                                    <div>\r\n                                        {allGameInfo[0].participantIdentities.slice(0, 5).map((participant, i_OtherPlayers) => {\r\n                                            return <div className=\"playerList\" key={i_OtherPlayers}>\r\n                                                <Link to={\"/eune/\" + participant.player.summonerName.toLowerCase()}>\r\n                                                    <img title={champions[allGameInfo[0].participants[i_OtherPlayers].championId]} src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/champion/'\r\n                                                        + champions[allGameInfo[0].participants[i_OtherPlayers].championId] + '.png'}\r\n                                                        alt={\"Champion\"} />\r\n                                                    {participant.player.summonerName}\r\n                                                </Link>\r\n                                            </div>\r\n                                        })}\r\n                                    </div>\r\n                                    <div>\r\n                                        {allGameInfo[0].participantIdentities.slice(5, 10).map((participant, i_OtherPlayers) => {\r\n                                            return <div className=\"playerList\" key={i_OtherPlayers}>\r\n                                                <Link to={\"/eune/\" + participant.player.summonerName.toLowerCase()}>\r\n                                                    <img title={champions[allGameInfo[0].participants[i_OtherPlayers + 5].championId]} src={'http://ddragon.leagueoflegends.com/cdn/' + acutalPatch + '/img/champion/'\r\n                                                        + champions[allGameInfo[0].participants[i_OtherPlayers + 5].championId] + '.png'}\r\n                                                        alt={\"Champion\"} />\r\n                                                    {participant.player.summonerName}\r\n                                                </Link>\r\n                                            </div>\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        })}\r\n                        <div>\r\n                            {this.state.loadMore ?\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            isDisabled: true,\r\n                                        }, () => {\r\n                                            this.fetchInfoAboutGame()\r\n                                        })\r\n                                    }}\r\n                                    disabled={this.state.isDisabled} id=\"showMoreHistoryButton\" type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                                    {this.state.isDisabled ? <div align=\"center\"><CircularProgress /></div> : \"Show more\"}\r\n                                </Button>\r\n                                :\r\n                                <Button id=\"showMoreHistoryButton\" disabled={true} type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                                    No more games to display\r\n                                </Button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst Loading = ({ status, errorMessage }) => {\r\n    if (status === false) {\r\n        return <div align=\"center\"><CircularProgress /></div>\r\n    }\r\n    else if (status === 404) {\r\n        return <div>User not found... {errorMessage}</div>\r\n    }\r\n    else {\r\n        return <div>Ups something went wrong... {errorMessage}</div>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    last100games: state.summonerInfoState.last100games,\r\n    championsIDs: state.someDataGame.championsIDs,\r\n    queuesIDsDictionary: state.someDataGame.queuesIDsDictionary,\r\n    spellsDictionary: state.someDataGame.spellsDictionary,\r\n    acutalPatch: state.someDataGame.acutalPatch,\r\n});\r\n\r\nexport default compose(\r\n    // withFirebase,\r\n    connect(mapStateToProps),\r\n)(GameHistory);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SummonerRanks = (props) => {\r\n    return <React.Fragment>\r\n        {props.soloRank ?\r\n            <div className=\"rankSummoner\">\r\n                <div>\r\n                    <img src={'/assets/images/rank-icons/' + props.soloRank.tier + '.png'}\r\n                        alt={props.soloRank.tier} />\r\n                </div>\r\n                <div className=\"soloQandFlexStats\">\r\n                    <span>SoloQ rank</span>\r\n                    <span>{props.soloRank.tier} {props.soloRank.rank}</span>\r\n                    <span>{props.soloRank.leaguePoints} lp</span>\r\n                    <span>{props.soloRank.wins}W / {props.soloRank.losses}L</span>\r\n                    <span>Win ratio <b>{Math.round(100 * (props.soloRank.wins / (props.soloRank.losses + props.soloRank.wins)))}%</b></span>\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n            <div className=\"unranked\">\r\n                <span>SoloQ</span>\r\n                <img src={'/assets/images/rank-icons/provisional.png'}\r\n                    alt=\"provisional\" />\r\n                <b>Unranked</b>\r\n            </div>\r\n        }\r\n\r\n        {props.flexRank ?\r\n            <div className=\"rankSummoner\">\r\n                <div>\r\n                    <img src={'/assets/images/rank-icons/' + props.flexRank.tier + '.png'}\r\n                        alt={props.flexRank.tier} />\r\n                </div>\r\n                <div className=\"soloQandFlexStats\">\r\n                    <span>Flex 5 vs 5 rank</span>\r\n                    <span>{props.flexRank.tier} {props.flexRank.rank}</span>\r\n                    <span>{props.flexRank.leaguePoints} LP</span>\r\n                    <span>{props.flexRank.wins}W / {props.flexRank.losses}L</span>\r\n                    <span>Win ratio <b>{Math.round(100 * (props.flexRank.wins / (props.flexRank.losses + props.flexRank.wins)))}%</b></span>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"unranked\">\r\n                <span>Flex</span>\r\n                <img src={'/assets/images/rank-icons/provisional.png'}\r\n                    alt=\"provisional\" />\r\n                <b>Unranked</b>\r\n            </div>\r\n        }\r\n    </React.Fragment>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    flexRank: state.summonerInfoState.flexRank,\r\n    soloRank: state.summonerInfoState.soloRank,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SummonerRanks);","import React from 'react';\r\nimport '../../css/SummonerInfo.css'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button'\r\nimport ChampionsStatistic from './championsStatistic'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\nimport GameHistory from './gameHistory'\r\nimport SummonerRanks from './summonerRanks'\r\n\r\nclass SearchUserInputContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            SummonerName: this.props.match.params.SummonerName.toLowerCase(),\r\n            isLodaing: true,\r\n            status: false,\r\n            errorMessage: \"\",\r\n            isFetchError: false,\r\n            lastUpdate: \"\",\r\n        };\r\n        this._isMounted = false;\r\n\r\n    };\r\n    async componentDidMount() {\r\n        this._isMounted = true;\r\n        // localStorage.clear()\r\n        //////////// fetch actual patch //////////////////////\r\n        const responseActualPatch = await fetch(\"https://ddragon.leagueoflegends.com/api/versions.json\")\r\n        if (!this._isMounted) return\r\n\r\n        if (responseActualPatch.status !== 200) {\r\n            this.setState({\r\n                status: responseActualPatch.status,\r\n                errorMessage: responseActualPatch.statusText\r\n            })\r\n            return\r\n        }\r\n        const jsonActualPatch = await responseActualPatch.json()\r\n        this.props.setActualPatch(jsonActualPatch[0]);\r\n\r\n        ////////// reset state //////\r\n        this.props.setBasicInfoSummoner()\r\n        this.props.setSoloRank()\r\n        this.props.setFlexRank()\r\n        this.props.setChampionsPlayedFlex()\r\n        this.props.setChampionsPlayedSolo()\r\n        this.props.setChampionsPlayedAram()\r\n        this.props.setLast100games()\r\n        this.props.setChampionsIDs()\r\n\r\n\r\n        this.props.addNewSummoner(this.state.SummonerName)\r\n\r\n        let getStorage = JSON.parse(localStorage.getItem(this.state.SummonerName))\r\n        let queuesIDsDictionaryFromStorage = JSON.parse(localStorage.getItem(\"queuesIDsDictionary\"))\r\n\r\n        if (queuesIDsDictionaryFromStorage === null) {\r\n            await this.fetchQueuesIDs()\r\n        }\r\n        else {\r\n            this.props.setQueuesIDsDictionary(queuesIDsDictionaryFromStorage)\r\n        }\r\n\r\n\r\n        if (getStorage === null) { } // check if storage exist\r\n        else if (getStorage.length === 8) { // if exist check if has all needed information\r\n\r\n            this.props.setBasicInfoSummoner(getStorage[0]);\r\n\r\n            let rank1 = getStorage[1][0]\r\n            let rank2 = getStorage[1][1]\r\n\r\n            if (rank1.queueType === \"RANKED_SOLO_5x5\") this.props.setSoloRank(rank1);\r\n            else if (rank1.queueType === \"RANKED_FLEX_SR\") this.props.setFlexRank(rank1);\r\n\r\n            if (rank2.queueType === \"RANKED_SOLO_5x5\") this.props.setSoloRank(rank2);\r\n            else if (rank2.queueType === \"RANKED_FLEX_SR\") this.props.setFlexRank(rank2);\r\n\r\n            this.props.setChampionsPlayedFlex(getStorage[2])\r\n            this.props.setChampionsPlayedSolo(getStorage[3])\r\n            this.props.setChampionsPlayedAram(getStorage[4])\r\n            this.props.setLast100games(getStorage[5])\r\n\r\n            if (getStorage[5] === null) {\r\n                this.props.setLast100games([])\r\n            }\r\n            this.props.setChampionsIDs(getStorage[6])\r\n\r\n            this.setState({\r\n                lastUpdate: getStorage[7],\r\n                isLodaing: false,\r\n            })\r\n            return\r\n        }\r\n\r\n        this.fetchSummDataOnMount()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n\r\n    async fetchQueuesIDs() {\r\n        const gamesID_url = \"http://static.developer.riotgames.com/docs/lol/queues.json\"\r\n        const responsegamesID_url = await fetch(gamesID_url)\r\n\r\n        if (!this._isMounted) return\r\n\r\n        if (responsegamesID_url.status !== 200) {\r\n            this.setState({\r\n                status: responsegamesID_url.status,\r\n                errorMessage: responsegamesID_url.statusText\r\n            })\r\n            return\r\n        }\r\n        let queuesIDsDictionary = {}\r\n        const jsonresponseGamesID_url = await responsegamesID_url.json()\r\n        jsonresponseGamesID_url.forEach((val) => {\r\n            queuesIDsDictionary[val.queueId] = val.description\r\n        })\r\n\r\n        try {\r\n            localStorage.setItem(\"queuesIDsDictionary\", JSON.stringify(queuesIDsDictionary));\r\n        } catch (e) {\r\n            localStorage.clear()\r\n        }\r\n        this.props.setQueuesIDsDictionary(queuesIDsDictionary)\r\n\r\n    }\r\n\r\n    async fetchSummDataOnMount() {\r\n        const SummonerName = this.state.SummonerName.toLowerCase()\r\n        // const RiotApiKey = \"?api_key=\" + process.env.REACT_APP_RITO_API_KEY\r\n        const RiotApiKeySecond = \"&api_key=\" + process.env.REACT_APP_RITO_API_KEY\r\n        // const region = \"https://eun1.api.riotgames.com\"\r\n        const region = \"eun1\"\r\n        // const cors = \"https://cors-anywhere.herokuapp.com/\"\r\n        const cors = \"\"\r\n        const acutalPatch = this.props.acutalPatch\r\n        // const cors = \"https://yacdn.org/proxy/\"\r\n        this.fetchQueuesIDs()\r\n\r\n        ////////////////////////////////// fetch data by summuner name ////////////////////////\r\n\r\n        // const SummonerByName = region + \"/lol/summoner/v4/summoners/by-name/\" + SummonerName + RiotApiKey\r\n        // const responseSummonerByName = await fetch(cors + SummonerByName)\r\n        const responseSummonerByName = await fetch(\"http://localhost:8000/api/summoner?region=\" + region + \"&SummonerName=\" + SummonerName)\r\n        if (!this._isMounted) return\r\n\r\n        if (responseSummonerByName.status !== 200) {\r\n            this.setState({\r\n                status: responseSummonerByName.status,\r\n                errorMessage: responseSummonerByName.statusText\r\n            })\r\n            return\r\n        }\r\n        const jsonSummonerByName = await responseSummonerByName.json()\r\n        this.props.setBasicInfoSummoner(jsonSummonerByName);\r\n\r\n        ///////////////// fetch summoner rank by summoner id /////////////////////////////\r\n\r\n        const SummonerID = jsonSummonerByName.id\r\n        // const SummonerRank = region + \"/lol/league/v4/entries/by-summoner/\" + SummonerID + RiotApiKey\r\n        // const responseSummonerRank = await fetch(cors + SummonerRank)\r\n        const responseSummonerRank = await fetch(\"http://localhost:8000/api/summonerID?region=\" + region + \"&SummonerID=\" + SummonerID)\r\n\r\n        if (!this._isMounted) return\r\n\r\n        if (responseSummonerRank.status !== 200) {\r\n            this.setState({\r\n                status: responseSummonerRank.status,\r\n                errorMessage: responseSummonerByName.statusText\r\n            })\r\n            return\r\n        }\r\n        const jsonSummonerRank = await responseSummonerRank.json()\r\n\r\n        if (jsonSummonerRank[0] === undefined) jsonSummonerRank[0] = false\r\n        else if (jsonSummonerRank[0].queueType === \"RANKED_SOLO_5x5\") this.props.setSoloRank(jsonSummonerRank[0]);\r\n        else this.props.setFlexRank(jsonSummonerRank[0]);\r\n        if (jsonSummonerRank[1] === undefined) jsonSummonerRank[1] = false\r\n        else if (jsonSummonerRank[1].queueType === \"RANKED_SOLO_5x5\") this.props.setSoloRank(jsonSummonerRank[1]);\r\n        else this.props.setFlexRank(jsonSummonerRank[1]);\r\n\r\n        ////////////////// fetch champions ids and their names ////////////////////\r\n\r\n        const responseChampions = await fetch(\"http://ddragon.leagueoflegends.com/cdn/\" + acutalPatch + \"/data/en_US/champion.json\")\r\n        if (responseChampions.status !== 200) {\r\n            this.setState({\r\n                status: responseChampions.status,\r\n                errorMessage: responseChampions.statusText\r\n            })\r\n            return\r\n        }\r\n        const jsonChampions = await responseChampions.json()\r\n\r\n        let dictionaryChampsID = []\r\n\r\n        for (const [key, value] of Object.entries(jsonChampions.data)) {\r\n\r\n            dictionaryChampsID[value.key] = key\r\n        }\r\n\r\n        this.props.setChampionsIDs(dictionaryChampsID)\r\n\r\n        ////////////// fetch last 100 games by account ID ///////////////////////////////\r\n\r\n        // let last_games_url = region + \"/lol/match/v4/matchlists/by-account/\" + jsonSummonerByName.accountId + RiotApiKey\r\n        // const responsegames = await fetch(cors + last_games_url)\r\n        const responsegames = await fetch(\"http://localhost:8000/api/last100games?region=\" + region + \"&accountId=\" + jsonSummonerByName.accountId)\r\n\r\n        if (responsegames.status === 404) { }\r\n        else if (responsegames.status !== 200) {\r\n            if (!this._isMounted) return\r\n\r\n            this.setState({\r\n                status: responsegames.status,\r\n                errorMessage: responsegames.statusText,\r\n                isFetchError: true,\r\n            })\r\n        }\r\n        const json_lats_100_games = await responsegames.json()\r\n\r\n        if (json_lats_100_games.matches === undefined) {\r\n            this.props.setLast100games([])\r\n        }\r\n        else {\r\n            this.props.setLast100games(json_lats_100_games.matches)\r\n        }\r\n\r\n        ////////////// fetch games by account ID ///////////////////////////////\r\n\r\n        let championsPlayedFlex = []\r\n        let championsPlayedSolo = []\r\n        let championsPlayedAram = []\r\n\r\n        championsPlayedFlex = await this.fetchListGame(region, jsonSummonerByName, RiotApiKeySecond, cors, 440)\r\n        championsPlayedSolo = await this.fetchListGame(region, jsonSummonerByName, RiotApiKeySecond, cors, 420)\r\n        championsPlayedAram = await this.fetchListGame(region, jsonSummonerByName, RiotApiKeySecond, cors, 450)\r\n\r\n        if (this.state.isFetchError) return\r\n        if (championsPlayedFlex === null) championsPlayedFlex = []\r\n        if (championsPlayedSolo === null) championsPlayedFlex = []\r\n        if (championsPlayedAram === null) championsPlayedFlex = []\r\n\r\n\r\n        this.props.setChampionsPlayedFlex(championsPlayedFlex)\r\n        this.props.setChampionsPlayedSolo(championsPlayedSolo)\r\n        this.props.setChampionsPlayedAram(championsPlayedAram)\r\n        let lastUpdate = Date.now()\r\n\r\n        let StorageData = []\r\n        StorageData.push(jsonSummonerByName)\r\n        StorageData.push(jsonSummonerRank)\r\n        StorageData.push(championsPlayedFlex)\r\n        StorageData.push(championsPlayedSolo)\r\n        StorageData.push(championsPlayedAram)\r\n        StorageData.push(json_lats_100_games.matches)\r\n        StorageData.push(dictionaryChampsID)\r\n        StorageData.push(lastUpdate)\r\n\r\n        try {\r\n            localStorage.setItem(SummonerName, JSON.stringify(StorageData));\r\n        } catch (e) {\r\n            localStorage.clear()\r\n        }\r\n\r\n        this.setState({\r\n            lastUpdate: lastUpdate,\r\n            isLodaing: false,\r\n        })\r\n    }\r\n\r\n    async fetchListGame(region, jsonSummonerByName, RiotApiKey, cors, gameID) {\r\n        let beginIndex = 0\r\n        let endIndex = 100\r\n        let totalGames = 0\r\n        let fetchedGames = []\r\n        do {\r\n            // let games = region + \"/lol/match/v4/matchlists/by-account/\" + jsonSummonerByName.accountId +\r\n            //     \"?queue=\" + gameID + \"&beginTime=1610085600000&endIndex=\" + endIndex + \"&beginIndex=\" + beginIndex + RiotApiKey\r\n            // const responsegames = await fetch(cors + games)\r\n            const responsegames = await fetch(\"http://localhost:8000/api/matchlists?region=\" + region +\r\n                \"&accountId=\" + jsonSummonerByName.accountId + \"&gameID=\" + gameID + \"&endIndex=\" + endIndex + \"&beginIndex=\" + beginIndex)\r\n\r\n            if (responsegames.status === 404) {\r\n\r\n                return []\r\n            }\r\n            else if (responsegames.status !== 200) {\r\n                if (!this._isMounted) return\r\n\r\n                this.setState({\r\n                    status: responsegames.status,\r\n                    errorMessage: responsegames.statusText,\r\n                    isFetchError: true,\r\n                })\r\n                return []\r\n            }\r\n            const jsongames = await responsegames.json()\r\n            totalGames = jsongames.totalGames\r\n            fetchedGames.push(...jsongames.matches)\r\n            beginIndex = beginIndex + 100\r\n            endIndex = endIndex + 100\r\n\r\n        } while (fetchedGames.length !== totalGames);\r\n\r\n        let championsPlayed = {}\r\n        let championsArray = []\r\n        fetchedGames.forEach((val, i) => {\r\n            championsArray.push(val.champion)\r\n        })\r\n\r\n        championsArray.forEach((x) => {\r\n\r\n            championsPlayed[x] = (championsPlayed[x] || 0) + 1;\r\n        });\r\n\r\n\r\n        let entries = Object.entries(championsPlayed);\r\n\r\n        let sorted = entries.sort((a, b) => b[1] - a[1]);\r\n\r\n        return sorted\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isLodaing ? <Loading status={this.state.status} errorMessage={this.state.errorMessage} />\r\n                    :\r\n                    <div>\r\n                        <div id=\"topBannerBasicInfo\">\r\n                            <div id=\"summIcon\">\r\n                                <img src={'http://ddragon.leagueoflegends.com/cdn/' + this.props.acutalPatch + '/img/profileicon/' + this.props.basicInfoSummoner.profileIconId + '.png'}\r\n                                    alt={\"Summoner icon\"} />\r\n                                <div>\r\n                                    {this.props.basicInfoSummoner.summonerLevel}\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"summNick\">\r\n                                <div>\r\n                                    {this.props.basicInfoSummoner.name}\r\n                                </div>\r\n                                <div>\r\n                                    <Button id=\"update\" type=\"submit\" variant=\"outlined\" color=\"primary\"\r\n                                        onClick={() => {\r\n                                            // localStorage.setItem(this.state.SummonerName, JSON.stringify(\"Refreshed\"));\r\n                                            this.setState({\r\n                                                isLodaing: true,\r\n                                            })\r\n                                            this.fetchSummDataOnMount();\r\n                                        }}\r\n                                    >\r\n                                        Update\r\n                                    </Button>\r\n                                    {/* <Button id=\"LiveGame\" type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                                        Live game to do\r\n                                    </Button> */}\r\n                                </div>\r\n                                <div className=\"lastUpdate\">\r\n                                    <LastUpdate lastUpdate={this.state.lastUpdate} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"allOderInfo\">\r\n                            <div id=\"leftContainer\">\r\n                                <div>\r\n                                    <SummonerRanks />\r\n                                </div>\r\n                                <div id=\"championsStats\">\r\n                                    <ChampionsStatistic />\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <GameHistory />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LastUpdate = ({ lastUpdate }) => {\r\n    let dateNow = Date.now()\r\n    let timeMinutes = Math.round((dateNow - lastUpdate) / 60000)\r\n    let timeAgo = timeMinutes\r\n\r\n    let timeAgoString\r\n\r\n    if (timeMinutes === 0) {\r\n        timeAgo = \"\"\r\n        timeAgoString = \"a few seconds ago\"\r\n    }\r\n    else if (timeMinutes <= 60) {\r\n        timeAgoString = \"minutes ago\"\r\n    }\r\n    else if (timeMinutes / 60 <= 24) {\r\n\r\n        timeAgo = Math.round(timeMinutes / 60)\r\n        timeAgoString = \"hours ago\"\r\n    }\r\n    else {\r\n        timeAgo = Math.round((timeMinutes / 60) / 24)\r\n        timeAgoString = \"days ago\"\r\n    }\r\n\r\n    return <div>Last update: <span>{timeAgo} {timeAgoString}</span></div>\r\n\r\n}\r\n\r\nconst Loading = ({ status, errorMessage }) => {\r\n    if (status === false) {\r\n        return <div align=\"center\"><CircularProgress /></div>\r\n    }\r\n    else if (status === 404) {\r\n        return <div>User not found... {errorMessage}</div>\r\n    }\r\n    else {\r\n        return <div>Ups something went wrong... {errorMessage}</div>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setBasicInfoSummoner: jsonSummonerByName =>\r\n        dispatch({ type: 'BASIC_INFO_SUMMOONER_SET', jsonSummonerByName }),\r\n    setFlexRank: flexRank =>\r\n        dispatch({ type: 'FLEX_RANK_SET', flexRank }),\r\n    setSoloRank: soloRank =>\r\n        dispatch({ type: 'SOLO_RANK_SET', soloRank }),\r\n    setChampionsPlayedFlex: championsPlayedFlex =>\r\n        dispatch({ type: 'PLAYED_FLEX_SET', championsPlayedFlex }),\r\n    setChampionsPlayedSolo: championsPlayedSolo =>\r\n        dispatch({ type: 'PLAYED_SOLO_SET', championsPlayedSolo }),\r\n    setChampionsPlayedAram: championsPlayedAram =>\r\n        dispatch({ type: 'PLAYED_ARAM_SET', championsPlayedAram }),\r\n    addNewSummoner: newSummoner =>\r\n        dispatch({ type: \"ADD_SUMMONER_SET\", newSummoner }),\r\n    setQueuesIDsDictionary: queuesIDsDictionary =>\r\n        dispatch({ type: \"GAMES_IDs_SET\", queuesIDsDictionary }),\r\n    setChampionsIDs: championsIDs =>\r\n        dispatch({ type: \"CHAMPIONS_IDs_SET\", championsIDs }),\r\n    setLast100games: last100games =>\r\n        dispatch({ type: \"LAST_100_GAMES_SET\", last100games }),\r\n    setQueueIDs: queueIds =>\r\n        dispatch({ type: \"QUEUE_ID_SET\", queueIds }),\r\n    setActualPatch: acutalPatch =>\r\n        dispatch({ type: \"ACTUAL_PATCH_SET\", acutalPatch }),\r\n\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    basicInfoSummoner: state.summonerInfoState.basicInfoSummoner,\r\n    flexRank: state.summonerInfoState.flexRank,\r\n    soloRank: state.summonerInfoState.soloRank,\r\n    championsPlayedFlex: state.summonerInfoState.championsPlayedFlex,\r\n    championsPlayedSolo: state.summonerInfoState.championsPlayedSolo,\r\n    championsPlayedAram: state.summonerInfoState.championsPlayedAram,\r\n    queuesIDsDictionary: state.someDataGame.queuesIDsDictionary,\r\n    acutalPatch: state.someDataGame.acutalPatch,\r\n});\r\n\r\nexport default compose(\r\n    // withFirebase,\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps,\r\n    ),\r\n)(SearchUserInputContent);\r\n\r\n\r\n","import React from 'react';\r\nimport SummonerInfoContent from './SummonerInfoContent'\r\n\r\nfunction SummonerInfo({ match }) {\r\n    return (\r\n        <div>\r\n            <SummonerInfoContent match={match} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SummonerInfo;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport '../../css/ChooseSummoner.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\nimport { withFirebase } from '../Firebase';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass ChooseSummonerAuth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            setClass: [\"selectedSummoner\", \"summoner\"],\r\n            loading: true,\r\n            arrayOfSummoners: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.firebase\r\n            .usersSummonersRef(this.props.firebase.currentUser()).on('value', snapshot => {\r\n                const summonerObject = snapshot.val();\r\n                if (!summonerObject) return this.setState({ loading: false });\r\n\r\n                let arrayOfSummoners = []\r\n\r\n                Object.keys(summonerObject).map(key => {\r\n                    return arrayOfSummoners.push(key)\r\n                });\r\n\r\n                this.props.setFavoriteSummoners(arrayOfSummoners)\r\n                \r\n                if (arrayOfSummoners.includes(this.props.summoners[0])){\r\n                    this.props.deleteSummoner(this.props.summoners[0])\r\n                }\r\n\r\n                this.setState({\r\n                    isLodaing: false,\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    deleteSummoner = (value) => {\r\n\r\n\r\n        this.props.firebase.usersSummonersRef(this.props.firebase.currentUser()).child(value).remove()\r\n            .catch(error => {\r\n                alert(error);\r\n            })\r\n\r\n        console.log(this.state.arrayOfSummoners);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chooseSummoner' >\r\n                <div>\r\n                    Favorite:\r\n                </div>\r\n                {this.state.isLodaing ? <div align=\"center\"><CircularProgress /></div>\r\n                    :\r\n                    this.props.favoriteSummoners.map((value, i) => {\r\n                        if (value === \"0\") return []\r\n                        return (\r\n                            <React.Fragment key={i}>\r\n                                <NavLink activeClassName=\"selectedSummoner\" className=\"summoner\" to={\"/eune/\" + value} style={{ textDecoration: 'none' }}>\r\n                                    <div className={this.state.setClass[1]}>\r\n                                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                                            {value}\r\n                                        </Button>\r\n                                    </div>\r\n                                </NavLink>\r\n                                <img className=\"plusIcon\" src={'/assets/images/delete_plus/delete.svg'} alt={\"Summoner icon\"}\r\n                                    onClick={() => {\r\n                                        this.deleteSummoner(value)\r\n                                    }}\r\n                                />\r\n                            </React.Fragment>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    summoners: state.summoners.summoners,\r\n    favoriteSummoners: state.summoners.favoriteSummoners\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteSummoner: newSummoner =>\r\n        dispatch({ type: 'DELETE_SUMMONER_SET', newSummoner }),\r\n    setFavoriteSummoners: favoriteSummoners =>\r\n        dispatch({ type: 'UPDATE_FAVORITE_SUMMONETS', favoriteSummoners }),\r\n});\r\n\r\nexport default compose(\r\n    withFirebase,\r\n    connect(mapStateToProps,\r\n        mapDispatchToProps\r\n    ),\r\n)(ChooseSummonerAuth)","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport '../../css/ChooseSummoner.css'\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass ChooseSummonerHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            setClass: [\"selectedSummoner\", \"summoner\"]\r\n        }\r\n    }\r\n    addSummoner = (value) => {\r\n        console.log(this.props.summoners[0]);\r\n        this.props.deleteSummoner(value)\r\n        console.log(this.props);\r\n        this.props.firebase.usersSummonersRef(this.props.firebase.currentUser()).update({\r\n            [value]: value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chooseSummoner' >\r\n                <div>\r\n                    History:\r\n                </div>\r\n                {(Array.isArray(this.props.summoners) && this.props.summoners.length) ? this.props.summoners.map((value, i) => {\r\n                    return (\r\n                        <React.Fragment key={i}>\r\n                            <NavLink activeClassName=\"selectedSummoner\" className=\"summoner\" to={\"/eune/\" + value} style={{ textDecoration: 'none' }}>\r\n                                <div className={this.state.setClass[1]}>\r\n                                    <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                                        {value}\r\n                                    </Button>\r\n                                </div>\r\n                            </NavLink>\r\n                            {this.props.authUser ?\r\n                                !this.props.favoriteSummoners.includes(value) ? <img className=\"plusIcon\" src={'/assets/images/delete_plus/add.svg'} alt={\"Summoner icon\"}\r\n                                    onClick={() => {\r\n                                        this.addSummoner(value)\r\n                                    }}\r\n                                />\r\n                                    :\r\n                                    false\r\n                                :\r\n                                <Link title=\"Add to farvorite\" className=\"linkToLoginPage\" to={\"/login\"}>\r\n                                    <img src={'/assets/images/delete_plus/add.svg'} alt={\"Summoner icon\"} />\r\n                                </Link>\r\n\r\n                            }\r\n\r\n                        </React.Fragment>\r\n                    )\r\n                })\r\n                    :\r\n                    <div>\r\n\r\n                    </div>\r\n                }\r\n                <NavLink className=\"newSummoner\" to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <div className={this.state.setClass[1]}>\r\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                            New summoner\r\n                 </Button>\r\n                    </div>\r\n                </NavLink>\r\n                <div className=\"bottomLine\">\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    summoners: state.summoners.summoners,\r\n    favoriteSummoners: state.summoners.favoriteSummoners,\r\n    authUser: state.sessionState.authUser,\r\n\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteSummoner: newSummoner =>\r\n        dispatch({ type: 'DELETE_SUMMONER_SET', newSummoner }),\r\n});\r\n\r\nexport default compose(\r\n    withFirebase,\r\n    connect(mapStateToProps,\r\n        mapDispatchToProps\r\n    ),\r\n)(ChooseSummonerHistory)","import React from 'react';\r\nimport '../../css/ChooseSummoner.css'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'recompose';\r\nimport ChooseSummonerAuth from './ChooseSummonerAuth'\r\nimport ChooseSummonerHistory from './ChooseSummonerHistory'\r\n\r\nconst ChooseSummoner = ({ authUser }) => {\r\n    return (\r\n        <React.Fragment>\r\n            { authUser ? <ChooseSummonerAuth /> : <div></div>}\r\n            <ChooseSummonerHistory />\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    authUser: state.sessionState.authUser,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps),\r\n)(ChooseSummoner);","export default __webpack_public_path__ + \"static/media/walentynka.2f3cd603.png\";","import React from 'react';\r\nimport '../../css/Header.css'\r\nimport '../../css/App.css'\r\nimport './walentynka.css'\r\nimport walentynka from \"./walentynka.png\"\r\n// import SignOutButton from '../SignOut/SignOut'\r\n\r\n\r\nconst Walentynka = () => {\r\n\r\n    return (\r\n        <div id = \"walentynka\">\r\n            <img src={walentynka}></img>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Walentynka","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport LoginRegister from '../LoginRegister/LoginRegister';\r\nimport React from 'react';\r\nimport { withAuthentication } from '../Session/';\r\nimport Header from '../Header/Header'\r\nimport Footer from '../Footer/Footer'\r\nimport '../../css/App.css'\r\nimport SearchUserInput from '../SearchUserInput'\r\nimport SummonerInfo from '../SummonerInfo'\r\nimport ChooseSummoner from '../ChooseSummoner/ChooseSummoner'\r\nimport Walentynka from './Walentynka'\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <Header />\r\n    <ChooseSummoner />\r\n    <ScrollToTop />\r\n    <Switch>\r\n      <Route exact strict path=\"/\" component={SearchUserInput} />\r\n      <Route exact strict path=\"/login\" component={LoginRegister} />\r\n      <Route exact strict path=\"/WalentynkaDlaDominiki\" component={Walentynka} />\r\n      <Route exact strict path=\"/eune/:SummonerName\" component={(props) => <SummonerInfo {...props} key={window.location.pathname}/>}/>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n    <Footer />\r\n  </Router>\r\n)\r\n\r\nclass ScrollToTopRoute extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <React.Fragment />\r\n  }\r\n}\r\n\r\nconst ScrollToTop = withRouter(ScrollToTopRoute)\r\n\r\nexport default withAuthentication(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './store';\r\nimport App from './components/App';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n      <App />\r\n    </FirebaseContext.Provider>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}